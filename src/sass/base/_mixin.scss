@mixin boxShadow(){
  filter: drop-shadow(0px 1px 7.5px rgba(0,0,0,0.1));
}
@mixin border(){
  filter: drop-shadow(0px 1px 2.5px rgba(0,0,0,0.05));
  background-color: #ffffff;
  border: 1px solid rgba(235,235,235,0.5);
}
@mixin borderMe {
  border: 1px solid #e5e5e5;
  box-shadow: 0 3px 6px rgba(0,0,0,0.2);
}
@mixin transition () {
  transition: all 0.4s ease-in-out;
  -webkit-transition: .5;
  -moz-transition: .5;
  -ms-transition: .5;
  -o-transition: .5;
}
@mixin flex($direction,$justify,$alight,$gap: 0) {
  display: flex;
  flex-direction: $direction;
  justify-content: $justify;
  align-items: $alight;
  @if $gap !=0{
    gap: $gap;
  }
}
@mixin transformY($y) {
    transform: translateY($y);
}
@mixin transformX($X) {
  transform: translateX($X);
}
@mixin transform($top,$left,$x,$y){
  top: $top;
  left: $left;
  transform: translate($x,$y);
  -webkit-transform: translate($x,$y);
  -moz-transform: translate($x,$y);
  -ms-transform: translate($x,$y);
  -o-transform: translate($x,$y);
}
@mixin transformBW {
  top: 50%;
  left: 50%;
  transform: translate(-50%,-50%);
  -webkit-transform: translate(-50%,-50%);
  -moz-transform: translate(-50%,-50%);
  -ms-transform: translate(-50%,-50%);
  -o-transform: translate(-50%,-50%);
}
@mixin hide {
  opacity: 0;
  visibility: hidden;
}
@mixin show {
  opacity: 1;
  visibility: visible;
}
@mixin for-size($breakpoint, $direction:down) {
  //neu breakpoint ton tai
  @if map-has-key($breakpoints,  $breakpoint) {
      //Kiểm tra breakpoint truyền vào có tồn tại như bạn đã định nghĩa hay không.
      $breakpoint-value: map-get($breakpoints, $breakpoint);

      // Xác định min-width hay max-width
      @if $direction == up {
          //Build media query
          @media (min-width: $breakpoint-value) {
              @content;
          }
      }
      @else if $direction == down {
          //Build media query
          @media (max-width: $breakpoint-value) {
              @content;
          }
      }
  }
}
